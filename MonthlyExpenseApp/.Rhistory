i <- i+1
}
All_IPL_Data[,'Close_Match']<-as.factor(All_IPL_Data[,'Close_Match'])
# label morning and evening matches - if 2 matches in a day then first one afternoon and next one evening match
i<-2
All_IPL_Data$Match_Time <- "Evening"
for (i in (2:nrow(All_IPL_Data)))
{
if (All_IPL_Data$Date[i] == All_IPL_Data$Date[i-1]) {All_IPL_Data$Match_Time[i-1] <- "Afternoon"}
i <- i+1
}
All_IPL_Data[,'Match_Time']<-as.factor(All_IPL_Data[,'Match_Time'])
write.xlsx(All_IPL_Data,"C:/Abhijay/Analytics use cases/MOOC/Practice datasets and code/Input/All_IPL_Data.xlsx")
IPL_Teams<-as.character(unique(All_IPL_Data$Team1))
All_Teams<-vector("list",length(IPL_Teams))
names(All_Teams)<-IPL_Teams
Run_Rates<-vector("list",length(IPL_Teams))
names(Run_Rates)<-IPL_Teams
i<-1
for (i in (1:length(IPL_Teams)))
{
assign(IPL_Teams[i],All_IPL_Data[All_IPL_Data$Team1 == IPL_Teams[i]|All_IPL_Data$Team2 == IPL_Teams[i],])
temp<-get(IPL_Teams[i])
temp$Match_Number<-seq(1:nrow(temp))
j<-1
temp$Won<- "Lost"
temp$Playing_At<- "Not_Home"
for (j in (1:nrow(temp)))
{
if ((temp$Winner[j] == IPL_Teams[i])&(temp$Team_Batting_First[j] == IPL_Teams[i])) {temp$Won[j] <- "FirstBatting"}
else if ((temp$Winner[j] == IPL_Teams[i])&(temp$Team_Batting_Second[j] == IPL_Teams[i])) {temp$Won[j] <- "SecondBatting"}
else if (temp$Winning_Team[j] == "Match Tied") {temp$Won[j] <- "Tied"}
if (temp$Team_Batting_First[j] == IPL_Teams[i])
{
temp$Batted[j] <- "First"
temp$Runs_Scored[j] <- temp$Bat_First_Runs_Scored[j]
temp$Run_Rate[j] <- temp$Bat_First_Run_Rate[j]
temp$Run_Rate_Conceded[j] <- temp$Bat_Second_Run_Rate[j]
}
else if (temp$Team_Batting_Second[j] == IPL_Teams[i])
{
temp$Batted[j] <- "Second"
temp$Runs_Scored[j] <- temp$Bat_Second_Runs_Scored[j]
temp$Run_Rate[j] <- temp$Bat_Second_Run_Rate[j]
temp$Run_Rate_Conceded[j] <- temp$Bat_First_Run_Rate[j]
}
if (IPL_Teams[i]=="Bangalore") {if (temp$Venue[j] == "Bangalore") {temp$Playing_At[j]<-"Home"}}
else if (IPL_Teams[i]=="Chennai")   {if (temp$Venue[j] == "Chennai") {temp$Playing_At[j]<-"Home"}}
else if (IPL_Teams[i]=="Delhi")     {if (temp$Venue[j] == "Delhi") {temp$Playing_At[j]<-"Home"}}
else if (IPL_Teams[i]=="Hyderabad") {if ((temp$Venue[j] == "Hyderabad (Deccan)")|(temp$Venue[j] == "Visakhapatnam")) {temp$Playing_At[j]<-"Home"}}
else if (IPL_Teams[i]=="Kochi")     {if (temp$Venue[j] == "Kochi") {temp$Playing_At[j]<-"Home"}}
else if (IPL_Teams[i]=="Kolkata")   {if (temp$Venue[j] == "Kolkata") {temp$Playing_At[j]<-"Home"}}
else if (IPL_Teams[i]=="Mumbai")    {if ((temp$Venue[j] == "Mumbai")|(temp$Venue[j] == "Mumbai (BS)")) {temp$Playing_At[j]<-"Home"}}
else if (IPL_Teams[i]=="Pune")      {if (temp$Venue[j] == "Pune") {temp$Playing_At[j]<-"Pune"}}
else if (IPL_Teams[i]=="Punjab")    {if (temp$Venue[j] == "Punjab") {temp$Playing_At[j]<-"Mohali"}}
else if (IPL_Teams[i]=="Rajasthan") {if (temp$Venue[j] == "Rajasthan") {temp$Playing_At[j]<-"Jaipur"}}
j<-j+1
}
assign(IPL_Teams[i],temp)
All_Teams[[i]]<-get(IPL_Teams[i])
i<-i+1
}
rm(temp)
#create Summary Table
Summary_Table<-data.frame(Team=c("Bangalore","Punjab","Delhi","Kolkata","Mumbai","Rajasthan","Hyderabad","Chennai","Kochi","Pune"))
i<-1
for (i in (1:nrow(Summary_Table)))
{
Summary_Table$Total_Matches[i]<-nrow(All_IPL_Data[All_IPL_Data$Team1 == Summary_Table$Team[i]|All_IPL_Data$Team2 == Summary_Table$Team[i],])
Summary_Table$Wins[i]<-nrow(All_IPL_Data[(All_IPL_Data$Team1 == Summary_Table$Team[i]|All_IPL_Data$Team2 == Summary_Table$Team[i])&(as.character(All_IPL_Data$Winner) == as.character(Summary_Table$Team[i])),])
Summary_Table$Tied[i]<-nrow(All_IPL_Data[(All_IPL_Data$Team1 == Summary_Table$Team[i]|All_IPL_Data$Team2 == Summary_Table$Team[i])&(All_IPL_Data$Winning_Team == "Match Tied"),])
Summary_Table$Lost[i]<- Summary_Table$Total_Matches[i]-Summary_Table$Wins[i]-Summary_Table$Tied[i]
Summary_Table$Win_Percent[i] <- (Summary_Table$Wins[i]/Summary_Table$Total_Matches[i])*100
Summary_Table$Batted_First[i]<-nrow(All_IPL_Data[(All_IPL_Data$Team1 == Summary_Table$Team[i]|All_IPL_Data$Team2 == Summary_Table$Team[i])&(All_IPL_Data$Team_Batting_First == Summary_Table$Team[i]),])
Summary_Table$Won_Batting_First[i]<-nrow(All_IPL_Data[(All_IPL_Data$Team1 == Summary_Table$Team[i]|All_IPL_Data$Team2 == Summary_Table$Team[i])&(All_IPL_Data$Team_Batting_First == Summary_Table$Team[i])&(as.character(All_IPL_Data$Winner) == as.character(Summary_Table$Team[i])),])
Summary_Table$Bat_First_Win_Percent[i]<-(Summary_Table$Won_Batting_First[i]/Summary_Table$Batted_First[i])*100
Summary_Table$Dismissed_Batting_First[i] <- nrow(All_IPL_Data[(All_IPL_Data$Team_Batting_First==Summary_Table$Team[i])&(All_IPL_Data$Bat_First_Wickets_Lost==10),])
Summary_Table$Chased[i]<-nrow(All_IPL_Data[(All_IPL_Data$Team1 == Summary_Table$Team[i]|All_IPL_Data$Team2 == Summary_Table$Team[i])&(All_IPL_Data$Team_Batting_Second == Summary_Table$Team[i]),])
Summary_Table$Won_Chasing[i]<-nrow(All_IPL_Data[(All_IPL_Data$Team1 == Summary_Table$Team[i]|All_IPL_Data$Team2 == Summary_Table$Team[i])&(All_IPL_Data$Team_Batting_Second == Summary_Table$Team[i])&(as.character(All_IPL_Data$Winner) == as.character(Summary_Table$Team[i])),])
Summary_Table$Chase_Win_Percent[i] <- (Summary_Table$Won_Chasing[i]/Summary_Table$Chased[i])*100
Summary_Table$Dismissed_Batting_Second[i] <-nrow(All_IPL_Data[(All_IPL_Data$Team_Batting_Second==Summary_Table$Team[i])&(All_IPL_Data$Bat_Second_Wickets_Lost==10),])
Summary_Table$Close_Matches_Won[i] <- nrow(All_IPL_Data[(All_IPL_Data$Team1 == Summary_Table$Team[i]|All_IPL_Data$Team2 == Summary_Table$Team[i])&(All_IPL_Data$Close_Match == "YES")&(as.character(All_IPL_Data$Winner) == as.character(Summary_Table$Team[i])),])
Summary_Table$Close_Matches_Lost[i] <- nrow(All_IPL_Data[(All_IPL_Data$Team1 == Summary_Table$Team[i]|All_IPL_Data$Team2 == Summary_Table$Team[i])&(All_IPL_Data$Close_Match == "YES")&(as.character(All_IPL_Data$Winner) != as.character(Summary_Table$Team[i])&(as.character(All_IPL_Data$Winning_Team) != "Match Tied")),])
Summary_Table$Close_Matches_Tied[i] <- nrow(All_IPL_Data[(All_IPL_Data$Team1 == Summary_Table$Team[i]|All_IPL_Data$Team2 == Summary_Table$Team[i])&(All_IPL_Data$Close_Match == "YES")&(as.character(All_IPL_Data$Winning_Team) == "Match Tied"),])
i <- i+1
}
rm(i,j,IPL_Teams)
Playoffs<-read.xlsx("C:/Abhijay/Analytics use cases/MOOC/Practice datasets and code/Input/Playoffs.xlsx")
temp<-ddply(All_IPL_Data,c("Close_Match","Winning_Team"),summarise,No_of_wins=length(Winning_Team))
barchart(No_of_wins~Close_Match,data=temp,groups=Winning_Team)
temp<-ddply(Chennai,"Year",summarize,length(Year))
pl1<-ggplot(Chennai,aes(x=Match_Number,y=Runs_Scored,fill=Won))+geom_bar(stat="identity")+ggtitle("Chennai")+scale_fill_manual(values=c("darkgreen","red","yellow","grey"),guide=FALSE)+geom_vline(xintercept=cumsum(temp[,2]),linetype="longdash")
temp[1,2]<-temp[1,2]/2
pl1<-pl1+annotate("text",label=c("2008","2009","2010","2011","2012","2013","2014","2015"),x=cumsum(temp[,2]),y=c(260,260,260,260,260,260,260,260),fontface="bold")
pl1
pl1<-ggplot(All_IPL_Data,aes(x=Venue,y=..count..))+geom_bar(aes(fill=Winning_Team),position="dodge")+ theme(axis.text.x = element_text(angle = 90, hjust = 1))+coord_flip()
pl1
All_IPL_Data$Venue<-factor(All_IPL_Data$Venue,levels=names(sort(table(All_IPL_Data$Venue),decreasing=FALSE)))
pl1<-ggplot(All_IPL_Data,aes(x=Venue,y=Bat_First_Run_Rate))+geom_boxplot()+ theme(axis.text.x = element_text(angle = 90, hjust = 1))+coord_flip()+geom_hline(yintercept=8,linetype="longdash")+annotate("text",label="8.0",x="Bloemfontein",y=8.2)
pl2<-ggplot(All_IPL_Data,aes(x=Venue,y=Bat_Second_Run_Rate))+geom_boxplot()+ theme(axis.text.x = element_text(angle = 90, hjust = 1))+coord_flip()+geom_hline(yintercept=8,linetype="longdash")+annotate("text",label="8.0",x="Bloemfontein",y=8.2)
grid.arrange(pl1,pl2,ncol=1)
ggplot(All_IPL_Data,aes(x=factor(BF_15_ov_wkts_lost),y=(BF_20_ov_score-BF_15_ov_score)))+geom_point()
temp=All_IPL_Data[(All_IPL_Data$BF_20_ov_score-All_IPL_Data$BF_15_ov_score)<35&(All_IPL_Data$BF_15_ov_wkts_lost<=2)&(All_IPL_Data$BF_20_ov_wkts_lost-All_IPL_Data$BF_15_ov_wkts_lost<=5),]
temp=All_IPL_Data[(All_IPL_Data$BS_15_ov_Req_RR<8 & All_IPL_Data$BS_15_ov_wkts_lost<=4 & All_IPL_Data$Winning_Team=="FirstBatting"),]
temp=All_IPL_Data[(All_IPL_Data$BS_15_ov_Req_RR<7.5 & All_IPL_Data$BS_15_ov_wkts_lost<=4 & All_IPL_Data$Winning_Team=="FirstBatting"),]
temp=All_IPL_Data[(All_IPL_Data$BS_15_ov_Req_RR<6 & All_IPL_Data$BS_15_ov_wkts_lost<=4 & All_IPL_Data$Winning_Team=="FirstBatting"),]
temp=All_IPL_Data[(All_IPL_Data$BS_15_ov_Req_RR<5 & All_IPL_Data$BS_15_ov_wkts_lost<=4 & All_IPL_Data$Winning_Team=="FirstBatting"),]
View(temp)
temp=All_IPL_Data[(All_IPL_Data$BS_15_ov_Req_RR<6 & All_IPL_Data$BS_15_ov_wkts_lost<=4 & All_IPL_Data$Winning_Team=="FirstBatting"),]
View(temp)
temp=All_IPL_Data[(All_IPL_Data$BS_15_ov_Req_RR<7 & All_IPL_Data$BS_15_ov_wkts_lost<=4 & All_IPL_Data$Winning_Team=="FirstBatting"),]
View(temp)
View(temp)
temp=All_IPL_Data[(All_IPL_Data$BF_20_ov_score-All_IPL_Data$BF_15_ov_score)<35&(All_IPL_Data$BF_15_ov_wkts_lost<=2)&(All_IPL_Data$BF_20_ov_wkts_lost-All_IPL_Data$BF_15_ov_wkts_lost<=5),]
View(temp)
temp=All_IPL_Data[(All_IPL_Data$BF_20_ov_score-All_IPL_Data$BF_15_ov_score)<30&(All_IPL_Data$BF_15_ov_wkts_lost<=2)&(All_IPL_Data$BF_20_ov_wkts_lost-All_IPL_Data$BF_15_ov_wkts_lost<=5),]
View(temp)
temp=All_IPL_Data[(All_IPL_Data$BF_20_ov_score-All_IPL_Data$BF_15_ov_score)<25&(All_IPL_Data$BF_15_ov_wkts_lost<=2)&(All_IPL_Data$BF_20_ov_wkts_lost-All_IPL_Data$BF_15_ov_wkts_lost<=5),]
View(temp)
library(knitr)
library(markdown)
library(rvest)
library(XML)
library("reshape2")   # for transposing data with 'cast' and 'melt' functions
library("plyr")     # to do ply functions
library("openxlsx")
library(gridExtra)
library(lattice)
library(ggplot2)
library(scales)
Trading_Entries <- read.xlsx("C:/Abhijay/Analytics use cases/Stock Returns/Input Folder/Share Transactions from 2005.xlsx")
Live_Share_Prices <- read.xlsx("C:/Abhijay/Analytics use cases/Stock Returns/Input Folder/Live Share Prices.xlsx")
Live_Share_Prices$SC_ID<-NA
Live_Share_Prices$Current_NSE_Price<-NA
Live_Share_Prices$Current_NSE_Volumes<-NA
Live_Share_Prices$Current_BSE_Price<-NA
Live_Share_Prices$Current_BSE_Volumes<-NA
Live_Share_Prices$Current.Price<-NA
Live_Share_Prices$NSE_1_yr_back<-NA
Live_Share_Prices$NSE_2_yr_back<-NA
Live_Share_Prices$NSE_3_yr_back<-NA
Live_Share_Prices$BSE_1_yr_back<-NA
Live_Share_Prices$BSE_2_yr_back<-NA
Live_Share_Prices$BSE_3_yr_back<-NA
Live_Share_Prices$Price_1_yr_back<-NA
Live_Share_Prices$Price_2_yr_back<-NA
Live_Share_Prices$Price_3_yr_back<-NA
Live_Share_Prices$CAGR_1_yr<-NA
Live_Share_Prices$CAGR_2_yr<-NA
Live_Share_Prices$CAGR_3_yr<-NA
temp<-lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'Link'],function(i) html(i))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current_NSE_Price<- unlist(lapply(temp,function(i) ifelse(length(i%>%html_nodes("span#Nse_Prc_tick strong"))>0,as.numeric(gsub(",","",i%>%html_nodes("span#Nse_Prc_tick strong")%>%.[[1]]%>%xmlValue())),NA)))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current_NSE_Volumes<- unlist(lapply(temp,function(i) ifelse(length(i%>%html_nodes("span#nse_volume"))>0,as.numeric(gsub(",","",i%>%html_nodes("span#nse_volume")%>%.[[1]]%>%xmlValue())),NA)))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current_BSE_Price<- unlist(lapply(temp,function(i) ifelse(length(i%>%html_nodes("span#Bse_Prc_tick"))>0,as.numeric(gsub(",","",i%>%html_nodes("span#Bse_Prc_tick")%>%.[[1]]%>%xmlValue())),NA)))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current_BSE_Volumes<- unlist(lapply(temp,function(i) ifelse(length(i%>%html_nodes("span#bse_volume"))>0,as.numeric(gsub(",","",i%>%html_nodes("span#bse_volume")%>%.[[1]]%>%xmlValue())),NA)))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID']<-unlist(lapply(temp,function(i) i%>%html_nodes("div.chartCont2#tabs3 input")%>%html_attr("value")%>%.[[2]]))
View(Live_Share_Prices)
temp<-lapply(Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",'Link'],function(i) html(i))
Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",]$Current_NSE_Price<- unlist(lapply(temp,function(i) ifelse(length(i%>%html_nodes("span.bd30tp"))>0,as.numeric(gsub(",","",i%>%html_nodes("span.bd30tp")%>%.[[1]]%>%xmlValue())),NA)))
Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",]$CAGR_1_yr<-as.numeric(unlist(lapply(temp,function(i) i%>%html_nodes("td.rgt span")%>%.[[4]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",]$CAGR_2_yr<-as.numeric(unlist(lapply(temp,function(i) i%>%html_nodes("td.rgt span")%>%.[[5]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",]$CAGR_3_yr<-as.numeric(unlist(lapply(temp,function(i) i%>%html_nodes("td.rgt span")%>%.[[6]]%>%xmlValue())))
View(Live_Share_Prices)
Live_Share_Prices$Current.Price<- ifelse(!is.na(Live_Share_Prices$Current_NSE_Price),Live_Share_Prices$Current_NSE_Price,Live_Share_Prices$Current_BSE_Price)
Live_Share_Prices$Traded.Volumes<- ifelse(!is.na(Live_Share_Prices$Current_NSE_Volumes),Live_Share_Prices$Current_NSE_Volumes,Live_Share_Prices$Current_BSE_Volumes)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_1_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=N&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*1)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_2_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=N&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*2)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_3_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=N&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*3)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$BSE_1_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=B&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*1)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$BSE_2_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=B&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*2)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$BSE_3_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=B&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*3)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_1_yr_back<- ifelse(!is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_1_yr_back),Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_1_yr_back,Live_Share_Prices$BSE_1_yr_back)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_2_yr_back <- ifelse(!is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_2_yr_back),Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_2_yr_back,Live_Share_Prices$BSE_1_yr_back)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_3_yr_back <- ifelse(!is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_3_yr_back),Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_3_yr_back,Live_Share_Prices$BSE_1_yr_back)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_1_yr_back),'Price_1_yr_back']<-Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_1_yr_back),'Current.Price']
Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_2_yr_back),'Price_2_yr_back']<-Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_2_yr_back),'Current.Price']
Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_3_yr_back),'Price_3_yr_back']<-Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_3_yr_back),'Current.Price']
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$CAGR_1_yr<-round(100*((Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current.Price/Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_1_yr_back)-1),2)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$CAGR_2_yr<-round(100*((Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current.Price/Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_2_yr_back)^(1/2)-1),2)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$CAGR_3_yr<-round(100*((Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current.Price/Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_3_yr_back)^(1/3)-1),2)
#fix the numeric dates to Date format
Trading_Entries[,1]<-as.Date(Trading_Entries[,1],origin="1899-12-30")
#keep only relevant columns
Trading_Entries$TOTAL<-Trading_Entries$Trade.Value+Trading_Entries$Brokerage.incl..taxes
Trading_Entries<-Trading_Entries[,c(1:6,16:17)]
#compute the unit price of the Share (incl. Brokerage and tax)
Trading_Entries$Unit_Price<-Trading_Entries$TOTAL/Trading_Entries$Qty
#create 2 datasets - one for Buy txns and one for Sell Txns
Buy_Trading_Entries<-data.frame(Trading_Entries[Trading_Entries$Action=="Buy",],row.names=NULL)
names(Buy_Trading_Entries)[names(Buy_Trading_Entries)=="Date"] <- "Buy_Date"
names(Buy_Trading_Entries)[names(Buy_Trading_Entries)=="Unit_Price"] <- "Buy_Price"
Buy_Trading_Entries<-Buy_Trading_Entries[,c(1:2,4,9)]
Buy_Trading_Entries<-Buy_Trading_Entries[order(Buy_Trading_Entries$Stock,Buy_Trading_Entries$Buy_Date),]
Sell_Trading_Entries<-data.frame(Trading_Entries[Trading_Entries$Action=="Sell",],row.names=NULL)
names(Sell_Trading_Entries)[names(Sell_Trading_Entries)=="Date"] <- "Sell_Date"
names(Sell_Trading_Entries)[names(Sell_Trading_Entries)=="Unit_Price"] <- "Sell_Price"
Sell_Trading_Entries<-Sell_Trading_Entries[,c(1:2,4,9)]
Sell_Trading_Entries<-Sell_Trading_Entries[order(Sell_Trading_Entries$Stock,Sell_Trading_Entries$Sell_Date),]
#expand the Buy dataset to have 1 share txn per row
Buy_Journal<-data.frame(Buy_Date=character(),Stock=character(0), Qty=numeric(0),Buy_Price=numeric(0),row.names=NULL)
Sell_Journal<-data.frame(Sell_Date=character(),Stock=character(0), Qty=numeric(0),Sell_Price=numeric(0),row.names=NULL)
#Buy
i <- 1
for (i in 1:nrow(Buy_Trading_Entries))
{
if(identical(Buy_Trading_Entries$Stock[i],Buy_Trading_Entries$Stock[(i-1)]))
{
Sl_No_Start<-Sl_No_End+1
Sl_No_End<-Sl_No_Start+Buy_Trading_Entries$Qty[i]-1
}
else
{
Sl_No_Start<-1
Sl_No_End<-Buy_Trading_Entries$Qty[i]
}
rec  <- Buy_Trading_Entries[i,]
recm<-rec[rep(seq_len(nrow(rec)), each=Buy_Trading_Entries$Qty[i]),]
recm$Sl_No<-seq(Sl_No_Start,Sl_No_End, by=1)
Buy_Journal <- data.frame(rbind(Buy_Journal, recm))
i <- i+1
}
#Sell
i <- 1
for (i in 1:nrow(Sell_Trading_Entries))
{
if(identical(Sell_Trading_Entries$Stock[i],Sell_Trading_Entries$Stock[(i-1)]))
{
Sl_No_Start<-Sl_No_End+1
Sl_No_End<-Sl_No_Start+Sell_Trading_Entries$Qty[i]-1
}
else
{
Sl_No_Start<-1
Sl_No_End<-Sell_Trading_Entries$Qty[i]
}
rec  <- Sell_Trading_Entries[i,]
recm<-rec[rep(seq_len(nrow(rec)), each=Sell_Trading_Entries$Qty[i]),]
recm$Sl_No<-seq(Sl_No_Start,Sl_No_End, by=1)
Sell_Journal <- data.frame(rbind(Sell_Journal, recm))
i <- i+1
}
row.names(Buy_Journal)<-NULL
row.names(Sell_Journal)<-NULL
#sort by the Stock Code and date
Buy_Journal<-Buy_Journal[order(Buy_Journal$Stock,Buy_Journal$Buy_Date),]
Sell_Journal<-Sell_Journal[order(Sell_Journal$Stock,Sell_Journal$Sell_Date),]
rm(rec,recm,i,Sl_No_Start,Sl_No_End)
#Create a Buy/Sell Trade journal
Trade_Journal<-merge(Buy_Journal,Sell_Journal,by=c("Stock","Sl_No"),all.x=TRUE)
#get live quotes of stocks I am still holding and replace Sell_Price with that
Trade_Journal<-merge(Trade_Journal,Live_Share_Prices,"Stock",all.x=TRUE)
Trade_Journal$Sell_Price[is.na(Trade_Journal$Sell_Price)]<-Trade_Journal$Current.Price[is.na(Trade_Journal$Sell_Price)]
#replace current holdings Sell_Date with today's date
Trade_Journal$Sell_Date[is.na(Trade_Journal$Sell_Date)]<-Sys.Date()
Trade_Journal$Holding_Period<-as.numeric(as.Date(Trade_Journal$Sell_Date) - as.Date(Trade_Journal$Buy_Date))
Trade_Journal$Capital_Gains<-Trade_Journal$Sell_Price - Trade_Journal$Buy_Price
Trade_Journal$Cummulative_Returns<-((Trade_Journal$Sell_Price/Trade_Journal$Buy_Price)-1)*100
Trade_Journal$CAGR[Trade_Journal$Holding_Period>=365]<-((Trade_Journal$Sell_Price[Trade_Journal$Holding_Period>=365]/Trade_Journal$Buy_Price[Trade_Journal$Holding_Period>=365])^(365/Trade_Journal$Holding_Period[Trade_Journal$Holding_Period>=365])-1)*100
Trade_Journal$Current.Price<-NULL
################################
#Analyze Current share holding##
################################
Current_Share_Holdings<-ddply(Trade_Journal[is.na(Trade_Journal$Qty.y),],.(Holding_Period,Stock,Location),summarize,No_Of_Shares=length(Sl_No),Capital_Locked=sum(Buy_Price),Current_Price=sum(Sell_Price),Cummulative_Returns=round(mean(Cummulative_Returns),2),CAGR=round(mean(CAGR),2))
Current_Share_Holdings$Period_In_Mths<-cut(Current_Share_Holdings$Holding_Period, breaks=c(seq(0,1080,90),max(Current_Share_Holdings$Holding_Period)), labels=c("0-3","3-6","6-9","9-12","12-15","15-18","18-21","21-24","24-27","27-30","30-33","33-36","> 3yr"))
```
Live_Share_Prices<-merge(Live_Share_Prices,ddply(Current_Share_Holdings,c("Stock"),summarize,No_Of_Units=sum(No_Of_Shares),Invested=sum(Capital_Locked),Current_Value=sum(Current_Price)),by="Stock",all.x = TRUE)
temp<-Live_Share_Prices[order(Live_Share_Prices$Current_Value),c('Stock','Current_Value')]
temp[nrow(temp)+1,]<-c("Total",sum(temp[,2]))
temp$Current_Value<-round(as.numeric(temp$Current_Value),2)
rownames(temp)<-NULL
temp
Live_Share_Prices[order(Live_Share_Prices$Traded.Volumes),c('Stock','No_Of_Units','Traded.Volumes')]
Live_Share_Prices[order(Live_Share_Prices$Traded.Volumes),c('Stock','CAGR_1_yr','CAGR_2_yr','CAGR_3_yr','Traded.Volumes')]
Live_Share_Prices[order(Live_Share_Prices$Traded.Volumes),c('Stock','CAGR_1_yr','CAGR_2_yr','CAGR_3_yr')]
View(Live_Share_Prices)
127.35*(2.05^2)
View(Live_Share_Prices)
304810/(21.44^1)
304810/(1.2144^1)
304810/(1.3261^2)
304810/(1.2144^4)
304810/(1.2144^3)
Live_Share_Prices[,c('CAGR_1_yr','CAGR_2_yr','CAGR_3_yr')
Live_Share_Prices[,c('CAGR_1_yr','CAGR_2_yr','CAGR_3_yr')]
Live_Share_Prices[,]
Live_Share_Prices[,'CAGR_1_yr']
Live_Share_Prices[,c('CAGR_1_yr','CAGR_2_yr')]
Live_Share_Prices[,c('CAGR_1_yr','CAGR_2_yr','CAGR_3_yr')]
is.na(Live_Share_Prices[,c('CAGR_1_yr','CAGR_2_yr','CAGR_3_yr')])
Live_Share_Prices[is.na(Live_Share_Prices[,c('CAGR_1_yr','CAGR_2_yr','CAGR_3_yr')])]
is.na(Live_Share_Prices$CAGR_1_yr)
Live_Share_Prices$CAGR_1_yr[is.na(Live_Share_Prices$CAGR_1_yr)]
Live_Share_Prices$CAGR_1_yr[is.na(Live_Share_Prices$CAGR_1_yr)]<-0
Live_Share_Prices$CAGR_1_yr[is.na(Live_Share_Prices$CAGR_2_yr)]<-0
Live_Share_Prices$CAGR_1_yr[is.na(Live_Share_Prices$CAGR_3_yr)]<-0
View(Live_Share_Prices)
Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",]$CAGR_1_yr<-as.numeric(unlist(lapply(temp,function(i) i%>%html_nodes("td.rgt span")%>%.[[4]]%>%xmlValue())))
temp
rm(list=ls())
Trading_Entries <- read.xlsx("C:/Abhijay/Analytics use cases/Stock Returns/Input Folder/Share Transactions from 2005.xlsx")
Live_Share_Prices <- read.xlsx("C:/Abhijay/Analytics use cases/Stock Returns/Input Folder/Live Share Prices.xlsx")
Live_Share_Prices$SC_ID<-NA
Live_Share_Prices$Current_NSE_Price<-NA
Live_Share_Prices$Current_NSE_Volumes<-NA
Live_Share_Prices$Current_BSE_Price<-NA
Live_Share_Prices$Current_BSE_Volumes<-NA
Live_Share_Prices$Current.Price<-NA
Live_Share_Prices$NSE_1_yr_back<-NA
Live_Share_Prices$NSE_2_yr_back<-NA
Live_Share_Prices$NSE_3_yr_back<-NA
Live_Share_Prices$BSE_1_yr_back<-NA
Live_Share_Prices$BSE_2_yr_back<-NA
Live_Share_Prices$BSE_3_yr_back<-NA
Live_Share_Prices$Price_1_yr_back<-NA
Live_Share_Prices$Price_2_yr_back<-NA
Live_Share_Prices$Price_3_yr_back<-NA
Live_Share_Prices$CAGR_1_yr<-NA
Live_Share_Prices$CAGR_2_yr<-NA
Live_Share_Prices$CAGR_3_yr<-NA
temp<-lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'Link'],function(i) html(i))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current_NSE_Price<- unlist(lapply(temp,function(i) ifelse(length(i%>%html_nodes("span#Nse_Prc_tick strong"))>0,as.numeric(gsub(",","",i%>%html_nodes("span#Nse_Prc_tick strong")%>%.[[1]]%>%xmlValue())),NA)))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current_NSE_Volumes<- unlist(lapply(temp,function(i) ifelse(length(i%>%html_nodes("span#nse_volume"))>0,as.numeric(gsub(",","",i%>%html_nodes("span#nse_volume")%>%.[[1]]%>%xmlValue())),NA)))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current_BSE_Price<- unlist(lapply(temp,function(i) ifelse(length(i%>%html_nodes("span#Bse_Prc_tick"))>0,as.numeric(gsub(",","",i%>%html_nodes("span#Bse_Prc_tick")%>%.[[1]]%>%xmlValue())),NA)))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current_BSE_Volumes<- unlist(lapply(temp,function(i) ifelse(length(i%>%html_nodes("span#bse_volume"))>0,as.numeric(gsub(",","",i%>%html_nodes("span#bse_volume")%>%.[[1]]%>%xmlValue())),NA)))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID']<-unlist(lapply(temp,function(i) i%>%html_nodes("div.chartCont2#tabs3 input")%>%html_attr("value")%>%.[[2]]))
temp<-lapply(Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",'Link'],function(i) html(i))
Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",]$Current_NSE_Price<- unlist(lapply(temp,function(i) ifelse(length(i%>%html_nodes("span.bd30tp"))>0,as.numeric(gsub(",","",i%>%html_nodes("span.bd30tp")%>%.[[1]]%>%xmlValue())),NA)))
Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",]$CAGR_1_yr<-as.numeric(unlist(lapply(temp,function(i) i%>%html_nodes("td.rgt span")%>%.[[4]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",]$CAGR_2_yr<-as.numeric(unlist(lapply(temp,function(i) i%>%html_nodes("td.rgt span")%>%.[[5]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Mutual Fund",]$CAGR_3_yr<-as.numeric(unlist(lapply(temp,function(i) i%>%html_nodes("td.rgt span")%>%.[[6]]%>%xmlValue())))
Live_Share_Prices$Current.Price<- ifelse(!is.na(Live_Share_Prices$Current_NSE_Price),Live_Share_Prices$Current_NSE_Price,Live_Share_Prices$Current_BSE_Price)
Live_Share_Prices$Traded.Volumes<- ifelse(!is.na(Live_Share_Prices$Current_NSE_Volumes),Live_Share_Prices$Current_NSE_Volumes,Live_Share_Prices$Current_BSE_Volumes)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_1_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=N&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*1)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_2_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=N&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*2)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_3_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=N&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*3)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$BSE_1_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=B&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*1)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$BSE_2_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=B&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*2)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$BSE_3_yr_back<-unlist(lapply(Live_Share_Prices[Live_Share_Prices$Type=="Equity",'SC_ID'],function(i) as.numeric(html(paste("http://www.moneycontrol.com/stocks/company_info/get_histprices.php?ex=B&sc_id=",i,"&range=0&sel_date=",gsub("-","",(Sys.Date()-365*3)),"&curr_open=0.00&curr_high=0.00&curr_low=0.00&curr_close=0.00&curr_vol=0",sep=""))%>%html_nodes("td.th03")%>%.[[10]]%>%xmlValue())))
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_1_yr_back<- ifelse(!is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_1_yr_back),Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_1_yr_back,Live_Share_Prices$BSE_1_yr_back)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_2_yr_back <- ifelse(!is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_2_yr_back),Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_2_yr_back,Live_Share_Prices$BSE_1_yr_back)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_3_yr_back <- ifelse(!is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_3_yr_back),Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$NSE_3_yr_back,Live_Share_Prices$BSE_1_yr_back)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_1_yr_back),'Price_1_yr_back']<-Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_1_yr_back),'Current.Price']
Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_2_yr_back),'Price_2_yr_back']<-Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_2_yr_back),'Current.Price']
Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_3_yr_back),'Price_3_yr_back']<-Live_Share_Prices[Live_Share_Prices$Type=="Equity",][is.na(Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_3_yr_back),'Current.Price']
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$CAGR_1_yr<-round(100*((Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current.Price/Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_1_yr_back)-1),2)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$CAGR_2_yr<-round(100*((Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current.Price/Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_2_yr_back)^(1/2)-1),2)
Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$CAGR_3_yr<-round(100*((Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Current.Price/Live_Share_Prices[Live_Share_Prices$Type=="Equity",]$Price_3_yr_back)^(1/3)-1),2)
View(Live_Share_Prices)
Live_Share_Prices$CAGR_1_yr[is.na(Live_Share_Prices$CAGR_1_yr)]<-0
Live_Share_Prices$CAGR_2_yr[is.na(Live_Share_Prices$CAGR_2_yr)]<-0
Live_Share_Prices$CAGR_3_yr[is.na(Live_Share_Prices$CAGR_3_yr)]<-0
View(Live_Share_Prices)
Trading_Entries[,1]<-as.Date(Trading_Entries[,1],origin="1899-12-30")
#keep only relevant columns
Trading_Entries$TOTAL<-Trading_Entries$Trade.Value+Trading_Entries$Brokerage.incl..taxes
Trading_Entries<-Trading_Entries[,c(1:6,16:17)]
#compute the unit price of the Share (incl. Brokerage and tax)
Trading_Entries$Unit_Price<-Trading_Entries$TOTAL/Trading_Entries$Qty
#create 2 datasets - one for Buy txns and one for Sell Txns
Buy_Trading_Entries<-data.frame(Trading_Entries[Trading_Entries$Action=="Buy",],row.names=NULL)
names(Buy_Trading_Entries)[names(Buy_Trading_Entries)=="Date"] <- "Buy_Date"
names(Buy_Trading_Entries)[names(Buy_Trading_Entries)=="Unit_Price"] <- "Buy_Price"
Buy_Trading_Entries<-Buy_Trading_Entries[,c(1:2,4,9)]
Buy_Trading_Entries<-Buy_Trading_Entries[order(Buy_Trading_Entries$Stock,Buy_Trading_Entries$Buy_Date),]
Sell_Trading_Entries<-data.frame(Trading_Entries[Trading_Entries$Action=="Sell",],row.names=NULL)
names(Sell_Trading_Entries)[names(Sell_Trading_Entries)=="Date"] <- "Sell_Date"
names(Sell_Trading_Entries)[names(Sell_Trading_Entries)=="Unit_Price"] <- "Sell_Price"
Sell_Trading_Entries<-Sell_Trading_Entries[,c(1:2,4,9)]
Sell_Trading_Entries<-Sell_Trading_Entries[order(Sell_Trading_Entries$Stock,Sell_Trading_Entries$Sell_Date),]
#expand the Buy dataset to have 1 share txn per row
Buy_Journal<-data.frame(Buy_Date=character(),Stock=character(0), Qty=numeric(0),Buy_Price=numeric(0),row.names=NULL)
Sell_Journal<-data.frame(Sell_Date=character(),Stock=character(0), Qty=numeric(0),Sell_Price=numeric(0),row.names=NULL)
#Buy
i <- 1
for (i in 1:nrow(Buy_Trading_Entries))
{
if(identical(Buy_Trading_Entries$Stock[i],Buy_Trading_Entries$Stock[(i-1)]))
{
Sl_No_Start<-Sl_No_End+1
Sl_No_End<-Sl_No_Start+Buy_Trading_Entries$Qty[i]-1
}
else
{
Sl_No_Start<-1
Sl_No_End<-Buy_Trading_Entries$Qty[i]
}
rec  <- Buy_Trading_Entries[i,]
recm<-rec[rep(seq_len(nrow(rec)), each=Buy_Trading_Entries$Qty[i]),]
recm$Sl_No<-seq(Sl_No_Start,Sl_No_End, by=1)
Buy_Journal <- data.frame(rbind(Buy_Journal, recm))
i <- i+1
}
#Sell
i <- 1
for (i in 1:nrow(Sell_Trading_Entries))
{
if(identical(Sell_Trading_Entries$Stock[i],Sell_Trading_Entries$Stock[(i-1)]))
{
Sl_No_Start<-Sl_No_End+1
Sl_No_End<-Sl_No_Start+Sell_Trading_Entries$Qty[i]-1
}
else
{
Sl_No_Start<-1
Sl_No_End<-Sell_Trading_Entries$Qty[i]
}
rec  <- Sell_Trading_Entries[i,]
recm<-rec[rep(seq_len(nrow(rec)), each=Sell_Trading_Entries$Qty[i]),]
recm$Sl_No<-seq(Sl_No_Start,Sl_No_End, by=1)
Sell_Journal <- data.frame(rbind(Sell_Journal, recm))
i <- i+1
}
row.names(Buy_Journal)<-NULL
row.names(Sell_Journal)<-NULL
#sort by the Stock Code and date
Buy_Journal<-Buy_Journal[order(Buy_Journal$Stock,Buy_Journal$Buy_Date),]
Sell_Journal<-Sell_Journal[order(Sell_Journal$Stock,Sell_Journal$Sell_Date),]
rm(rec,recm,i,Sl_No_Start,Sl_No_End)
#Create a Buy/Sell Trade journal
Trade_Journal<-merge(Buy_Journal,Sell_Journal,by=c("Stock","Sl_No"),all.x=TRUE)
#get live quotes of stocks I am still holding and replace Sell_Price with that
Trade_Journal<-merge(Trade_Journal,Live_Share_Prices,"Stock",all.x=TRUE)
Trade_Journal$Sell_Price[is.na(Trade_Journal$Sell_Price)]<-Trade_Journal$Current.Price[is.na(Trade_Journal$Sell_Price)]
#replace current holdings Sell_Date with today's date
Trade_Journal$Sell_Date[is.na(Trade_Journal$Sell_Date)]<-Sys.Date()
Trade_Journal$Holding_Period<-as.numeric(as.Date(Trade_Journal$Sell_Date) - as.Date(Trade_Journal$Buy_Date))
Trade_Journal$Capital_Gains<-Trade_Journal$Sell_Price - Trade_Journal$Buy_Price
Trade_Journal$Cummulative_Returns<-((Trade_Journal$Sell_Price/Trade_Journal$Buy_Price)-1)*100
Trade_Journal$CAGR[Trade_Journal$Holding_Period>=365]<-((Trade_Journal$Sell_Price[Trade_Journal$Holding_Period>=365]/Trade_Journal$Buy_Price[Trade_Journal$Holding_Period>=365])^(365/Trade_Journal$Holding_Period[Trade_Journal$Holding_Period>=365])-1)*100
Trade_Journal$Current.Price<-NULL
################################
#Analyze Current share holding##
################################
Current_Share_Holdings<-ddply(Trade_Journal[is.na(Trade_Journal$Qty.y),],.(Holding_Period,Stock,Location),summarize,No_Of_Shares=length(Sl_No),Capital_Locked=sum(Buy_Price),Current_Price=sum(Sell_Price),Cummulative_Returns=round(mean(Cummulative_Returns),2),CAGR=round(mean(CAGR),2))
Current_Share_Holdings$Period_In_Mths<-cut(Current_Share_Holdings$Holding_Period, breaks=c(seq(0,1080,90),max(Current_Share_Holdings$Holding_Period)), labels=c("0-3","3-6","6-9","9-12","12-15","15-18","18-21","21-24","24-27","27-30","30-33","33-36","> 3yr"))
Live_Share_Prices<-merge(Live_Share_Prices,ddply(Current_Share_Holdings,c("Stock"),summarize,No_Of_Units=sum(No_Of_Shares),Invested=sum(Capital_Locked),Current_Value=sum(Current_Price)),by="Stock",all.x = TRUE)
View(Live_Share_Prices)
Live_Share_Prices$Value_1_yr_back<-Live_Share_Prices$Current_Value/(1+Live_Share_Prices$CAGR_1_yr)
Live_Share_Prices$Value_2_yr_back<-Live_Share_Prices$Current_Value/(1+Live_Share_Prices$CAGR_2_yr)^2
Live_Share_Prices$Value_3_yr_back<-Live_Share_Prices$Current_Value/(1+Live_Share_Prices$CAGR_3_yr)^3
View(Live_Share_Prices)
Live_Share_Prices$Value_1_yr_back<-Live_Share_Prices$Current_Value/(1+Live_Share_Prices$CAGR_1_yr/100)
Live_Share_Prices$Value_2_yr_back<-Live_Share_Prices$Current_Value/(1+Live_Share_Prices$CAGR_2_yr/100)^2
Live_Share_Prices$Value_3_yr_back<-Live_Share_Prices$Current_Value/(1+Live_Share_Prices$CAGR_3_yr/100)^3
View(Live_Share_Prices)
87839*1.237^2
temp<-Live_Share_Prices[order(Live_Share_Prices$Current_Value),c('Stock','Current_Value','Value_1_yr_back','Value_1_yr_back')]
temp
temp[nrow(temp)+1,]<-c("Total",sum(temp[,2:4]))
temp
temp<-Live_Share_Prices[order(Live_Share_Prices$Current_Value),c('Stock','Current_Value','Value_1_yr_back','Value_2_yr_back','Value_3_yr_back')]
temp[nrow(temp)+1,]<-c("Total",sum(temp[,2:4]))
temp
temp[nrow(temp)+1,]<-c("Total",sum(temp[,2:5]))
sum(temp[,2:5])
temp[nrow(temp)+1,]<-c("Total",colSums(temp[,2:5]))
temp
temp$Value_1_yr_back<-round(as.numeric(temp$Value_1_yr_back),2)
temp$Value_2_yr_back<-round(as.numeric(temp$Value_2_yr_back),2)
temp$Value_3_yr_back<-round(as.numeric(temp$Value_3_yr_back),2)
rownames(temp)<-NULL
temp
temp$Current_Value<-round(as.numeric(temp$Current_Value),2)
temp
4592716.56/3956901.61
4592716.56/2981097.62
(4592716.56/2981097.62)^(0.5)
temp(nrow(temp),)
temp
temp[nrow(temp),]
temp[nrow(temp),'Current_Value']
temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_1_yr_back']
temp1<-Live_Share_Prices[order(Live_Share_Prices$Traded.Volumes),c('Stock','CAGR_1_yr','CAGR_2_yr','CAGR_3_yr','Traded.Volumes')]
temp1
temp1[nrow(temp1)+1,]<-c("Total",100*(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_1_yr_back']-1),100*(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_2_yr_back']-1)^(1/2),100*(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_3_yr_back']-1)^(1/3))
temp1[nrow(temp1)+1,]<-c("Total",100*(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_1_yr_back']-1),100*(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_2_yr_back']-1)^(1/2),100*(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_3_yr_back']-1)^(1/3),NA)
temp1
4592716.56/2981097.62
(4592716.56/2981097.62-1)^(1/2)
(4592716.56/2981097.62-1)
srqt(4592716.56/2981097.62)
sqrt(4592716.56/2981097.62)
sqrt(4592716.56/2981097.62)-1
2981097.62*1.24*(1.24)
temp1[nrow(temp1)+1,]<-c("Total",100*(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_1_yr_back']-1),100*((temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_2_yr_back'])^(1/2)-1),100*((temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_3_yr_back'])^(1/3)-1),NA)
temp1
rm(temp1)
temp1<-Live_Share_Prices[order(Live_Share_Prices$Traded.Volumes),c('Stock','CAGR_1_yr','CAGR_2_yr','CAGR_3_yr','Traded.Volumes')]
CAGR_1_yr<-temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_1_yr_back']
CAGR_2_yr<-(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_2_yr_back'])^(1/2)
CAGR_3_yr<-(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_3_yr_back'])^(1/3)
temp1[nrow(temp1)+1,]<-c("Total",100*(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_1_yr_back']-1),100*((temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_2_yr_back'])^(1/2)-1),100*((temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_3_yr_back'])^(1/3)-1),NA)
temp1
temp1[nrow(temp1)+1,]<-c("Total",round(100*(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_1_yr_back']-1),2),round((100*((temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_2_yr_back'])^(1/2)-1)),2),round((100*((temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_3_yr_back'])^(1/3)-1)),2),NA)
temp1
temp1<-Live_Share_Prices[order(Live_Share_Prices$Traded.Volumes),c('Stock','CAGR_1_yr','CAGR_2_yr','CAGR_3_yr','Traded.Volumes')]
CAGR_1_yr<-temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_1_yr_back']
CAGR_2_yr<-(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_2_yr_back'])^(1/2)
CAGR_3_yr<-(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_3_yr_back'])^(1/3)
temp1[nrow(temp1)+1,]<-c("Total",round(100*(temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_1_yr_back']-1),2),round((100*((temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_2_yr_back'])^(1/2)-1)),2),round((100*((temp[nrow(temp),'Current_Value']/temp[nrow(temp),'Value_3_yr_back'])^(1/3)-1)),2),NA)
temp1
temp
2820486.72*1.1765^3
temp1
install.packages("knitr")
shiny::runApp('C:/Abhijay/Analytics use cases/Monthly expense analysis/Monthly expense analysis/R code/MonthlyExpenseApp')
shiny::runApp('C:/Abhijay/Analytics use cases/Monthly expense analysis/Monthly expense analysis/R code/MonthlyExpenseApp')
shiny::runApp('C:/Abhijay/Analytics use cases/Monthly expense analysis/Monthly expense analysis/R code/MonthlyExpenseApp')
shiny::runApp('C:/Abhijay/Analytics use cases/Monthly expense analysis/Monthly expense analysis/R code/MonthlyExpenseApp')
library(shinyapps)
setwd("C:/Abhijay/Analytics use cases/Monthly expense analysis/Monthly expense analysis/R code/MonthlyExpenseApp")
deployApp()
